goals

finish postgreSQL course:finished
finish one section java course:
-------------------------------------------------------------

-COALESCE- returns first non-zero value.
-NULLIF-takes two arguments. if they are equal it returns zero,
if not equal returns first argument
-DATES
-EXTRACTING FIELDS
-UNIQUE CONSTRAINT
-CHECK CONSTRAINT
-UPDATE
-FOREIGN KEYS,JOINS,RELATIONSHIPS
-INNER JOINS
-EXPORTING QUERY RESULTS TO CSV
-SERIALS,SEQUENCES
-SOME EXTENSIONS:uuid-ossp: USING UUID AS PRIMARY KEY

SELECT NOW();
SELECT NOW()::DATE; it has also timezone options in https://www.postgresql.org/docs/current/datatype-datetime.html
SELECT NOW()::TIME;

SELECT EXTRACT(DAY FROM NOW());
SELECT first_name, last_name, gender, email, date_of_birth, country_of_birth,EXTRACT (MONTH FROM AGE(NOW(),date_of_birth)) AS age FROM person;

ALTER TABLE person ADD CONSTRAINT unique_email_address UNIQUE (email); 
ALTER TABLE person ADD UNIQUE(email);
ALTER TABLE person DROP CONSTRAINT unique_email_address;

ALTER TABLE person DROP CONSTRAINT person_pkey;
ALTER TABLE person ADD PRIMARY KEY(id);

ALTER TABLE person ADD CONSTRAINT gender_constraint CHECK (gender = 'Female' OR gender = 'Male');

UPDATE person SET email = 'rori@gmail.com' WHERE id = 2007;



INSERT INTO person (id,first_name,last_name,gender,email,date_of_birth,country_of_birth)
VALUES (2015, 'Osgood', 'Biers', 'Male','obiers9@hud.gov',DATE '2021-07-31','Greece')
ON CONFLICT (id) DO NOTHING;


SELECT * FROM person JOIN car ON person.car_id = car.id;


SELECT person.first_name, car.make, car.model, car.price
FROM person
JOIN car ON person.car_id = car.id;


SELECT * FROM person
LEFT JOIN car ON car.id = person.car_id;



SELECT * FROM person
LEFT JOIN car ON person.car_id = car.id
WHERE car.* IS NULL;



\copy (SELECT * FROM person LEFT JOIN car ON car.id = person.car_id) TO '/Users/ugrck/Downloads/results.csv' DELIMITER ',' CSV HEADER;




SELECT * FROM pg_available_extensions;
CREATE EXTENSION IF NOT EXISTS "uuid-ossp";




SELECT * FROM person
JOIN car USING(car_uid);

SELECT * FROM person
LEFT JOIN car USING(car_uid);


SELECT * FROM person
LEFT JOIN car USING(car_uid)
WHERE car.* IS NULL;

